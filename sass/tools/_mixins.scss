/* =======================
   TOOLS | MIXINS

   Thanks to @sutterlity
   https://github.com/sutter/POPY-Starter-integration-web/blob/master/scss/tools/_mixins.scss
   ======================= */

// -----------------------
// == Base
// -----------------------

// = Inline-block
// -----------------------------
@mixin inline-block ($haslayout : true){
        display: inline-block;
        vertical-align: middle;
        @if $haslayout == true {
                .lt-ie8 & {
                        display: inline;
                        zoom: 1;
                }
        }
}

// = Clearfix
// -----------------------------
@mixin clearfix ($haslayout : true) {
        @if $haslayout == true {
                .lt-ie8 & {
                        zoom: 1;
                }
        }
        &:before, &:after {
                content: "";
                display: table;
        }
        &:after {
                clear: both
        }
}

// = Opacity
// -----------------------------
@mixin opacity($opacity) {
    filter: unquote("progid:DXImageTransform.Microsoft.Alpha(Opacity=#{round($opacity * 100)})");
    opacity: $opacity;

    /* Hack IE6 */
    .lt-ie7 & {
        filter : alpha(opacity=#{round($opacity * 100)});
        zoom: 1;
    }
}

// = Placeholder
// -----------------------------
@mixin placeholder($color : $clr-mixin-placeholder) {
        &::-webkit-input-placeholder {
                color: $color;
        }
        &:-moz-placeholder {
                color: $color;
        }
        &:-ms-input-placeholder {
                color: $color;
        }
}

// = Selection
// -----------------------------
$prefixes: ("-webkit-","-moz-", "");
@mixin selection($color, $background) {
        @each $prefix in $prefixes {
                ::#{$prefix}selection {
                        color: $color;
                        background: $background;
                        text-shadow:none;
                }
        }
}

// = Position
// -----------------------------
@mixin position ($position: relative, $coordinates: 0 0 0 0) {
        @if type-of($position) == list {
                $coordinates: $position;
                $position: relative;
        }
        $top: nth($coordinates, 1);
        $right: nth($coordinates, 2);
        $bottom: nth($coordinates, 3);
        $left: nth($coordinates, 4);
        position: $position;
        @if $top == auto {
                top: $top;
        }
        @else if not(unitless($top)) {
                top: $top;
        }
        @if $right == auto {
                right: $right;
        }
        @else if not(unitless($right)) {
                right: $right;
        }
        @if $bottom == auto {
                bottom: $bottom;
        }
        @else if not(unitless($bottom)) {
                bottom: $bottom;
        }
        @if $left == auto {
                left: $left;
        }
        @else if not(unitless($left)) {
                left: $left;
        }
}

// ----------------------------------------------------------
// == CSS3
// ----------------------------------------------------------

// = Prefixer
// -----------------------------
$prefix-for-webkit:    true !default;
$prefix-for-mozilla:   true !default;
$prefix-for-microsoft: true !default;
$prefix-for-opera:     true !default;
$prefix-for-spec:      true !default;

@mixin prefixer ($property, $value, $prefixes) {
        @each $prefix in $prefixes {

                @if $prefix == webkit and $prefix-for-webkit == true {
                        -webkit-#{$property}: $value;
                }
                @else if $prefix == moz and $prefix-for-mozilla == true {
                        -moz-#{$property}: $value;
                }
                @else if $prefix == ms and $prefix-for-microsoft == true {
                        -ms-#{$property}: $value;
                }
                @else if $prefix == o and $prefix-for-opera == true {
                        -o-#{$property}: $value;
                }
                @else if $prefix == spec and $prefix-for-spec == true {
                        #{$property}: $value;
                }
                @else {
                        @warn "Unrecognized prefix: #{$prefix}";
                }
        }
}

@mixin disable-prefix-for-all() {
        $prefix-for-webkit:    false;
        $prefix-for-mozilla:   false;
        $prefix-for-microsoft: false;
        $prefix-for-opera:     false;
        $prefix-for-spec:      false;
}

// = Border-radius
// -----------------------------
@mixin border-radius($radius : 5px) {
        @include prefixer(border-radius, $radius, moz spec)
}

@mixin border-top-radius($radius : 5px) {
        @include prefixer(border-top-left-radius, $radius, moz spec);
        @include prefixer(border-top-right-radius, $radius, moz spec);
}

@mixin border-bottom-radius($radius : 5px) {
        @include prefixer(border-bottom-left-radius, $radius, moz spec);
        @include prefixer(border-bottom-right-radius, $radius, moz spec);
}

@mixin border-left-radius($radius : 5px) {
        @include prefixer(border-top-left-radius, $radius, moz spec);
        @include prefixer(border-bottom-left-radius, $radius, moz spec);
}

@mixin border-right-radius($radius : 5px) {
        @include prefixer(border-top-right-radius, $radius, moz spec);
        @include prefixer(border-bottom-right-radius, $radius, moz spec);
}

// = Transition
// -----------------------------
@mixin transition ($transition : all .3s ease-in-out) {
        @include prefixer(transition, $transition, webkit moz ms o spec);
}

// = Box-sizing
// -----------------------------
@mixin box-sizing ($box : border-box) {
        //  content-box | border-box | inherit
        @include prefixer(box-sizing, $box, webkit moz spec);
}

// = Filter
// -----------------------------
@mixin filter (
        $filter-1,
        $filter-2 : false,
        $filter-3 : false,
        $filter-4 : false,
        $filter-5 : false,
        $filter-6 : false,
        $filter-7 : false,
        $filter-8 : false,
        $filter-9 : false,
        $filter-10: false
        ) {
        $filter : compact($filter-1, $filter-2, $filter-3, $filter-4, $filter-5, $filter-6, $filter-7, $filter-8, $filter-9, $filter-10);
        @include prefixer(filter, $filter, webkit moz spec);
}

// = UL list inline
// -----------------------------
@mixin ul-list-inline() {
    list-style: none;
    margin: 0;
    padding: 0;

    li {
        @include inline-block();
    }
}

// = Center content
// -----------------------------
@mixin center-content() {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

// = Background image
// = replacement
// -----------------------------
@mixin background-image-replacement($w, $h, $url) {
    background: transparent url($url) 0 0 no-repeat;
    display: block;
    height: $h;
    text-indent: -99999px;
    width: $w;
}

// = Font size px to rem
// ----------------------------
@mixin font-size($size) {
    font-size: $size; //Fallback in px
    font-size: calculateRem($size);
}

// = Animation
// -----------------------------

@mixin keyframe ($animation_name) {
    @-webkit-keyframes $animation_name {
        @content;
    }

    @-moz-keyframes $animation_name {
        @content;
    }

    @-o-keyframes $animation_name {
        @content;
    }

    @keyframes $animation_name {
        @content;
    }
}

/*
    Example usage:
    @include animation(10s, 5s, changecolour)
 */
@mixin animation ($delay, $duration, $direction, $animation) {
    -webkit-animation-delay: $delay;
    -webkit-animation-duration: $duration;
    -webkit-animation-name: $animation;
    -webkit-animation-direction: $direction;
    -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    -moz-animation-delay: $delay;
    -moz-animation-duration: $duration;
    -moz-animation-name: $animation;
    -moz-animation-direction: $direction;
    -moz-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    -o-animation-delay: $delay;
    -o-animation-duration: $duration;
    -o-animation-name: $animation;
    -o-animation-direction: $direction;
    -o-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    animation-delay: $delay;
    animation-duration: $duration;
    animation-name: $animation;
    animation-direction: $direction;
    animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}
